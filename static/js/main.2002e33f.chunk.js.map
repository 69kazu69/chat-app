{"version":3,"sources":["components/MyMessage.jsx","components/TheirMessage.jsx","components/MessageForm.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MyMessage","message","attachments","length","src","file","alt","className","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMessage","isFistMessageByUser","sender","username","backgroundImage","marginLeft","MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","trim","sendMessage","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","id","type","multiple","display","events","files","class","SendOutlined","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","avatar","title","keys","Object","key","lastMessageKey","width","renderMessages","height","Modal","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","onNewMessage","Audio","play","LoginForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2002e33f.chunk.js","sourcesContent":["const MyMessage = ({message}) => {\r\n    if (message?.attachments?.length > 0 ){\r\n        return (\r\n            <img \r\n            src = {message.attachments[0].file}\r\n            alt = 'an-image'\r\n            className = 'message-image'\r\n            style = {{float : 'right'}}\r\n            />\r\n        )\r\n    }\r\n    return(\r\n        <div className = \"message\" style = {{float : 'right',marginRight : '18px',  color : 'white', backgroundColor : 'blue'}}>\r\n            {message.text}\r\n        </div>\r\n    );\r\n}\r\nexport default MyMessage;","const TheirMessage = (lastMessage, message) => {\r\n    const isFistMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username ;\r\n\r\n    return(\r\n        <div className=\"message-row\">\r\n            {isFistMessageByUser && (\r\n                <div \r\n                className=\"message-avatar\"\r\n                style = {{\r\n                    backgroundImage : 'url(${message?.sender?.avatar})'\r\n                }}\r\n                />\r\n            )}\r\n            {(message?.attachments?.length > 0 )\r\n                    ?(\r\n                        <img \r\n                        src = {message.attachments[0].file}\r\n                        alt = 'an-image'\r\n                        className = 'message-image'\r\n                        style = {{marginLeft : isFistMessageByUser ? '4px' : '48px'}}\r\n                        />\r\n                    ):(\r\n                        <div className = \"message\" style = {{float : 'left',color : 'brown', backgroundColor : '#CABCDC', marginLeft : isFistMessageByUser ? '4px' : '48px'}}>\r\n                             {message.text}\r\n                        </div>\r\n                    )\r\n                } \r\n        </div>\r\n    );\r\n}\r\nexport default TheirMessage;","import {useState} from 'react';\r\nimport {sendMessage, isTyping} from 'react-chat-engine';\r\nimport {SendOutlined, PictureOutlined} from '@ant-design/icons';\r\n\r\nconst MessageForm = (props) => {\r\n    const [value, setValue] = useState('')\r\n    const {chatId, creds} = props;\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const text = value.trim();\r\n\r\n        if(text.length > 0) sendMessage(creds, chatId, { text })\r\n\r\n        setValue('');\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n         setValue(event.target.value);\r\n\r\n         isTyping(props, chatId);\r\n    }\r\n\r\n    const handleUpload = (events) => {\r\n        sendMessage( creds, chatId,{files: events.target.files, text: ''})\r\n    }\r\n    return(\r\n        <form className = \"message-form\" onSubmit = {handleSubmit}>\r\n            <input\r\n            className = \"message-input\"\r\n            placeholder = \"Your msg ....\"\r\n            value = {value}\r\n            onChange = {handleChange}\r\n            onSubmit = {handleSubmit}\r\n            />\r\n        <label htmlFor=\"upload-button\">\r\n             <span className = \"image-button\">\r\n                 <PictureOutlined className='picture-icon' />\r\n             </span>\r\n             <input \r\n             id = \"upload-button\" \r\n             type=\"file\"\r\n             multiple = {false}\r\n             style = {{display: 'none'}}\r\n             onChange = {handleUpload}\r\n             />\r\n        </label>\r\n        <button\r\n        type=\"submit\"\r\n        class = \"send-button\"\r\n        >\r\n            <SendOutlined className = \"send-icon\" />\r\n        </button>\r\n        </form>\r\n\r\n    );\r\n}\r\nexport default MessageForm;","import MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\nimport MessageForm from './MessageForm';\r\n\r\nconst ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages } = props;\r\n\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => person.last_read === message.id && (\r\n    <div\r\n      key={`read_${index}`}\r\n      className=\"read-receipt\"\r\n      style={{\r\n        float: isMyMessage ? 'right' : 'left',\r\n        backgroundImage: person.person.avatar && `url(${person.person.avatar})`,\r\n      }}\r\n    />\r\n  ));\r\n\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n\r\n      return (\r\n        <div key={`msg_${index}`} style={{ width: '100%' }}>\r\n          <div className=\"message-block\">\r\n            {isMyMessage\r\n              ? <MyMessage message={message} />\r\n              : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />}\r\n          </div>\r\n          <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n            {renderReadReceipts(message, isMyMessage)}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!chat) return <div />;\r\n\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => ` ${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n      {renderMessages()}\r\n      <div style={{ height: '100px' }} />\r\n      <div className=\"message-form-container\">\r\n        <MessageForm {...props} chatId={activeChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatFeed;","import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst projectID = '2c4115d1-5896-4973-b63a-e7fb075697ae'\r\nconst Modal = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const authObject = { 'Project-ID': projectID, 'User-Name': username, 'User-Secret': password };\r\n\r\n    try {\r\n      await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n\r\n      localStorage.setItem('username', username);\r\n      localStorage.setItem('password', password);\r\n\r\n      window.location.reload();\r\n      setError('');\r\n    } catch (err) {\r\n      setError('Oops, incorrect credentials.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form\">\r\n        <h1 className=\"title\">Chat Application</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\r\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n          <div align=\"center\">\r\n            <button type=\"submit\" className=\"button\">\r\n              <span>Start chatting</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <h1>{error}</h1>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Modal;","import { ChatEngine } from 'react-chat-engine';\r\n\r\nimport ChatFeed from './components/ChatFeed';\r\nimport './App.css';\r\nimport LoginForm from './components/LoginForm';\r\n\r\nconst App = () => {\r\n    if(!localStorage.getItem('username')) return <LoginForm />;\r\n    return(\r\n        <ChatEngine\r\n        height = \"100vh\"\r\n        projectID = \"2c4115d1-5896-4973-b63a-e7fb075697ae\"\r\n        userName = {localStorage.getItem('username')}\r\n        userSecret = {localStorage.getItem('password')}\r\n        renderChatFeed = {(chatAppProps) => <ChatFeed {...chatAppProps}/>}\r\n        onNewMessage={() => new Audio('https://chat-engine-assets.s3.amazonaws.com/click.mp3').play()}\r\n        />\r\n    );\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}